@startuml
actor Customer as cus
control System as sys
entity CryptoWallet as wallet
entity PaymentProvider as payment
database Database as db
entity EmailHandler as email

cus -> sys : Navigates to payment screen
cus <-- sys : Show rental/payment details

group #LightBlue Get user payment [loop]
  alt #LightCyan Pay with crypto
    sys -> wallet : Connect to wallet provider
    cus <-- wallet : Prompt wallet sign in
    sys -> sys : Calculate exchange rate
    cus <-- wallet : Prompt user to pay/sign transaction
    cus -> wallet : Pay/sign transaction
    cus <-- wallet : Return payment result
  else Pay with card
    group #LightBlue Get card details [loop until valid card details]
      cus <-- sys : Request card details
      cus -> sys : Input card details
      sys -> sys : Check card details
      group #Pink Invalid details
        cus <-- sys : Show error message
      end
    end

    sys -> payment : Attempt payment
    sys <-- payment : Return payment result
  end

  sys -> sys : Validate payment result

  alt #LightCyan Payment failed
    sys -> sys : Check if payment has failed 3 times
    alt #OrangeRed Payment failure limit reached [Exit] 
      cus <-- sys : Show transaction failed message 
    else #Pink
      cus <-- sys : Show error message
    end

  else #LightGreen Payment success
    sys -> db : Store rental details to storage
    sys -> email : Request email/receipt for customer
    cus <-- email : Send email/receipt
  end
end
@enduml